name: Main

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Test
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
        name: Checkout
        with:
          fetch-depth: 0
      - uses: borales/actions-yarn@v2.3.0
        name: Install dependencies
        with:
          cmd: install
      - uses: borales/actions-yarn@v2.3.0
        name: Run Test
        with:
          cmd: test

  version:
    name: Version Bump
    runs-on: self-hosted
    needs: [test]
    if: "!contains(github.event.head_commit.message, 'chore(release)')"
    steps:
      - name: Import GPG signing key
        continue-on-error: true
        env:
          GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
        run: |
          echo -n "$GPG_SIGNING_KEY" | base64 --decode | gpg --import
      - name: Bump and Publish
        run: |
          git config --local commit.gpgsign true
          git config --local user.email "${{ secrets.COMMITTER_EMAIL }}"
          git config --local user.name "${{ secrets.COMMITTER_NAME }}"
          git remote set-url origin "https://${{secrets.COMMITTER_NAME}}:${{secrets.AUTOVERSION_TOKEN}}@github.com/$GITHUB_REPOSITORY"
          yarn release
          git push --follow-tags origin main

  build:
    name: Build Image
    runs-on: self-hosted
    needs: [test]
    if: "contains(github.event.head_commit.message, 'chore(release)')"
    steps:
      - name: Get package version
        uses: martinbeentjes/npm-get-version-action@master
        id: package_version
      - name: Set image tag
        id: image_tag
        run: |
          echo "::set-output name=tag::${{ secrets.DOCKER_REGISTRY }}/sandbox"
          echo "::set-output name=tag_semver::${{ secrets.DOCKER_REGISTRY }}/sandbox:${{ steps.package_version.outputs.current-version }}"
          echo "::set-output name=tag_latest::${{ secrets.DOCKER_REGISTRY }}/sandbox:latest"
      - uses: docker/login-action@v1
        name: Login to docker registry
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build image
        run: docker build -t ${{ steps.image_tag.outputs.tag_latest }} -t ${{ steps.image_tag.outputs.tag_semver }} .
      - name: Push image
        run: docker push ${{ steps.image_tag.outputs.tag }}
