name: Main

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Test
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
        name: Checkout
        with:
          fetch-depth: 0
      - uses: borales/actions-yarn@v2.3.0
        name: Install dependencies
        with:
          cmd: install
      - uses: borales/actions-yarn@v2.3.0
        name: Run Test
        with:
          cmd: test

  version:
    name: Version Bump
    runs-on: self-hosted
    needs: [test]
    if: "!contains(github.event.head_commit.message, 'chore(release)')"
    steps:
      - name: Set local git settings
        run: |
          git config --local user.email "${{ secrets.COMMITTER_EMAIL }}"
          git config --local user.name "${{ secrets.COMMITTER_NAME }}"
          git config --local user.signingkey "${{ secrets.GPG_SIGNING_KEY2 }}"
          git config --local commit.gpgsign true
          git remote set-url origin "https://${{secrets.COMMITTER_NAME}}:${{secrets.AUTOVERSION_TOKEN}}@github.com/$GITHUB_REPOSITORY"
      - uses: borales/actions-yarn@v2.3.0
        name: Bump version
        with:
          cmd: release
      - name: Publish
        run: git push --follow-tags origin main

  build:
    name: Build Image
    runs-on: self-hosted
    needs: [test]
    if: "contains(github.event.head_commit.message, 'chore(release)')"
    steps:
      - name: Get package version
        uses: martinbeentjes/npm-get-version-action@master
        id: package_version
      - name: Set image tag
        id: tag
        run: |
          echo "::set-output name=bare::${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_REPOSITORY }}"
          echo "::set-output name=version::${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_REPOSITORY }}:${{ steps.package_version.outputs.current-version }}"
          echo "::set-output name=latest::${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_REPOSITORY }}:latest"
      - uses: docker/login-action@v1
        name: Login to docker registry
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build image
        run: docker build -t ${{ steps.tag.outputs.latest }} -t ${{ steps.tag.outputs.version }} .
      - name: Push image
        run: docker push ${{ steps.tag.outputs.bare }}
